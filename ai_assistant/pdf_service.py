# ai_assistant/pdf_service.py

from fpdf import FPDF
from datetime import datetime

class PDF(FPDF):
    def header(self):
        # Logo or Title
        self.set_font('Arial', 'B', 15)
        self.cell(0, 10, 'MediBridge: AI Health Assistant Summary', 0, 1, 'C')
        self.ln(10) # Line break

    def footer(self):
        # Page number
        self.set_y(-15)
        self.set_font('Arial', 'I', 8)
        self.cell(0, 10, f'Page {self.page_no()}', 0, 0, 'C')

def create_summary_pdf(summary_text: str, session_id: str, user_id: str) -> bytes:
    """
    Creates a PDF document from a session summary text.

    Args:
        summary_text: The clinical summary generated by the AI.
        session_id: The session ID to include in the PDF.
        user_id: The user ID to include in the PDF.

    Returns:
        The raw PDF data as a bytes object.
    """
    pdf = PDF()
    pdf.add_page()
    pdf.set_font('Arial', '', 12)

    # Add metadata
    pdf.cell(0, 10, f"Report Generated: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}", 0, 1)
    pdf.cell(0, 10, f"Session ID: {session_id}", 0, 1)
    pdf.cell(0, 10, f"User ID: {user_id}", 0, 1)
    pdf.ln(10) # Line break

    # Add the summary title
    pdf.set_font('Arial', 'B', 14)
    pdf.cell(0, 10, 'Clinical Summary', 0, 1)

    # Add the summary body
    pdf.set_font('Arial', '', 12)
    pdf.multi_cell(0, 10, summary_text)

    # Generate the PDF in memory and return it as bytes
    pdf_bytes = bytes(pdf.output())
    return pdf_bytes